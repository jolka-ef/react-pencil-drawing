{"version":3,"sources":["../../react - pencil drawing/src/DrawArea.js","../../react - pencil drawing/src/Button.js","../../react - pencil drawing/src/Select.js","../../react - pencil drawing/src/colorOptions.js","../../react - pencil drawing/src/widthOptions.js","../../react - pencil drawing/src/DrawPanel.js","../../react - pencil drawing/src/Path.js","../../react - pencil drawing/src/createDrawings.js","../../react - pencil drawing/src/cursor.js","../../react - pencil drawing/src/index.js","../../react - pencil drawing/src/App.js"],"names":["DrawArea","props","cursor","drawings","handleDrawing","handleLeavingDrawArea","handleDrawStart","handleTouchStart","reference","react_default","a","createElement","className","onMouseDown","onMouseLeave","onMouseMove","onTouchStart","onTouchMove","ref","style","Button","onClick","name","Select","onChange","label","options","value","htmlFor","id","map","o","key","getOptions","colorOptions","widthOptions","DrawPanel","color","handleClearingDraws","handleColorChange","handleWidthChange","width","Button_Button","classname","Select_Select","Path","path","d","concat","strokeWidth","stroke","fill","createDrawings","draws","filter","draw","length","index","Path_Path","getCursor","scalar","arguments","undefined","svgTemplate","getSvgTemplate","encodeURIComponent","replace","size","ReactDOM","render","_useState","useState","_useState2","Object","slicedToArray","setColor","_useState3","_useState4","setPath","_useState5","_useState6","setDraws","_useState7","_useState8","isDrawing","setIsDrawing","_useState9","_useState10","setWidth","drawArea","useRef","useEffect","document","addEventListener","handleDrawEnd","removeEventListener","toConsumableArray","DrawPanel_DrawPanel","event","target","DrawArea_DrawArea","point","current","createSVGPoint","x","clientX","touches","y","clientY","pointSVG","matrixTransform","getScreenCTM","inverse","Math","round","preventDefault","getElementById"],"mappings":"2RAIaA,SAAW,SAACC,GAAU,IAE/BC,EAOED,EAPFC,OACAC,EAMEF,EANFE,SACAC,EAKEH,EALFG,cACAC,EAIEJ,EAJFI,sBACAC,EAGEL,EAHFK,gBACAC,EAEEN,EAFFM,iBACAC,EACEP,EADFO,UAGF,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,OACEC,UAAU,WACVC,YAAaP,EACbQ,aAAcT,EACdU,YAAaX,EACbY,aAAcT,EACdU,YAAab,EACbc,IAAKV,EACLW,MAAOjB,GAENC,MCtBIiB,SAAS,SAACnB,GAAU,IAE7BoB,EAEEpB,EAFFoB,QACAC,EACErB,EADFqB,KAGF,OACEb,EAAAC,EAAAC,cAAA,UACEC,UAAU,SACVS,QAASA,GAERC,KCXMC,SAAS,SAACtB,GAAU,IAE7BuB,EAKEvB,EALFuB,SACAC,EAIExB,EAJFwB,MACAH,EAGErB,EAHFqB,KACAI,EAEEzB,EAFFyB,QACAC,EACE1B,EADF0B,MAQF,OACElB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAEbH,EAAAC,EAAAC,cAAA,SACEC,UAAU,eACVgB,QAASN,GAERG,GAGHhB,EAAAC,EAAAC,cAAA,UACEC,UAAU,SACViB,GAAIP,EACJA,KAAMA,EACNK,MAAOA,EACPH,SAAUA,GApBG,SAAAE,GAAO,OAAIA,EAAQI,IAAI,SAACC,GAAD,OACxCtB,EAAAC,EAAAC,cAAA,UAAQqB,IAAOD,EAAEJ,MAAOA,MAASI,EAAEJ,OAChCI,EAAEN,OAASM,EAAEJ,SAoBXM,CAAWP,OCpCPQ,EAAe,CAC1B,CACET,MAAO,QACPE,MAAO,WAET,CACEF,MAAO,OACPE,MAAO,WAET,CACEF,MAAO,QACPE,MAAO,WAET,CACEF,MAAO,SACPE,MAAO,WAET,CACEF,MAAO,MACPE,MAAO,YCnBEQ,EAAe,CAC1B,CACEV,MAAO,IACPE,MAAO,GAET,CACEF,MAAO,IACPE,MAAO,GAET,CACEF,MAAO,IACPE,MAAO,GAET,CACEF,MAAO,KACPE,MAAO,IAET,CACEF,MAAO,KACPE,MAAO,KCXES,SAAY,SAACnC,GAAU,IAEhCoC,EAKEpC,EALFoC,MACAC,EAIErC,EAJFqC,oBACAC,EAGEtC,EAHFsC,kBACAC,EAEEvC,EAFFuC,kBACAC,EACExC,EADFwC,MAIF,OACEhC,EAAAC,EAAAC,cAAA,OAAKC,UAAW,aACdH,EAAAC,EAAAC,cAAC+B,EAAD,CACEC,UAAU,SACVrB,KAAK,QACLD,QAASiB,IAEX7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAACiC,EAAD,CACEhC,UAAU,SACVa,MAAM,QACND,SAAUe,EACVb,QAASQ,EACTP,MAAQU,IAEV5B,EAAAC,EAAAC,cAACiC,EAAD,CACEhC,UAAU,SACVa,MAAM,QACND,SAAUgB,EACVd,QAASS,EACTR,MAAQc,QClCLI,EAAO,SAAC5C,GAAU,IAE3BoC,EAGEpC,EAHFoC,MACAS,EAEE7C,EAFF6C,KACAL,EACExC,EADFwC,MAGF,OACAhC,EAAAC,EAAAC,cAAA,QACEoC,EAAGD,GAAI,KAAAE,OAASF,GAChBG,YAAaR,EACbS,OAAQb,EACRc,KAAK,UCbIC,EAAiB,SAACC,GAE3B,OADkBA,EAAMC,OAAO,SAACC,GAAD,OAAUA,EAAKT,KAAKU,OAAS,IAE9C1B,IAAI,SAACyB,EAAME,GAAP,OACdhD,EAAAC,EAAAC,cAAC+C,EAAD,CACErB,MAAOkB,EAAKlB,MACZL,IAAKyB,EAAMA,EACXX,KAAMS,EAAKT,KACXL,MAAOc,EAAKd,WCXTkB,EAAY,SAACtB,EAAOa,GAC/B,IADuCU,EACvCC,UAAAL,OAAA,QAAAM,IAAAD,UAAA,GAAAA,UAAA,GADgD,EAE1CE,EAAcC,EAAe3B,EAAOa,EAAOU,GAE/C,OADAG,EAAcE,mBAAmBF,EAAYG,QAAQ,KAAM,MACpD,CAAChE,OAAM,2BAAA8C,OAA6Be,EAA7B,SAAAf,OAAgDE,EAAOU,EAAvD,gBAGZI,EAAiB,SAAC3B,EAAO8B,GAAR,+EAAAnB,OACoDmB,EADpD,aAAAnB,OACoEmB,EADpE,wGAAAnB,OAGLX,EAHK,wGAAAW,OAILX,EAJK,2ECDvB+B,IAASC,OAAO5D,EAAAC,EAAAC,cCCT,WAAe,IAAA2D,EACMC,mBAAS,WADfC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACbjC,EADamC,EAAA,GACNG,EADMH,EAAA,GAAAI,EAEIL,mBAAS,IAFbM,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAEb9B,EAFa+B,EAAA,GAEPC,EAFOD,EAAA,GAAAE,EAGMR,mBAAS,IAHfS,EAAAP,OAAAC,EAAA,EAAAD,CAAAM,EAAA,GAGb1B,EAHa2B,EAAA,GAGNC,EAHMD,EAAA,GAAAE,EAIcX,oBAAS,GAJvBY,EAAAV,OAAAC,EAAA,EAAAD,CAAAS,EAAA,GAIbE,EAJaD,EAAA,GAIFE,EAJEF,EAAA,GAAAG,EAKMf,mBAAS,KALfgB,EAAAd,OAAAC,EAAA,EAAAD,CAAAa,EAAA,GAKb7C,EALa8C,EAAA,GAKNC,EALMD,EAAA,GAMdE,EAAWC,mBAGjBC,oBAAU,WACR,GAAIP,EAIF,OAHAQ,SAASC,iBAAiB,UAAWC,GACrCF,SAASC,iBAAiB,WAAYC,GAE/B,WACLF,SAASG,oBAAoB,UAAWD,GACxCF,SAASG,oBAAoB,WAAYD,MAK/C,IAAMxF,EAAkB,kBACtB+E,GAAa,IA8BTS,EAAgB,WACpBT,GAAa,GACbJ,EAAS,SAAA5B,GAAK,SAAAL,OAAAyB,OAAAuB,EAAA,EAAAvB,CAAQpB,GAAR,CAAe,CAAChB,QAAOI,QAAOK,YAC5CgC,EAAQ,KAYJ5E,EAASyD,EAAUtB,EAAOI,GAE1BtC,EAAWiD,EAAc,GAAAJ,OAAAyB,OAAAuB,EAAA,EAAAvB,CAAKpB,GAAL,CAAY,CAAChB,QAAMI,QAAOK,WAEzD,OACErC,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACsF,EAAD,CACE5D,MAAOA,EACPC,oBAjBsB,kBAC1B2C,EAAS,KAiBL1C,kBAfoB,SAAC2D,GAAD,OACxBvB,EAASuB,EAAMC,OAAOxE,QAelBa,kBAboB,SAAC0D,GAAD,OACxBV,EAASU,EAAMC,OAAOxE,QAalBc,MAAOA,IAEThC,EAAAC,EAAAC,cAACyF,EAAD,CACE9F,gBAAiBA,EACjBF,cArDgB,SAAC8F,GACrB,GAAId,EAAW,CACb,IAAMiB,EAAQZ,EAASa,QAAQC,iBAEzBC,EAA6B,qBAAlBN,EAAMO,QACrBP,EAAMQ,QAAQ,GAAGD,QAAUP,EAAMO,QAC7BE,EAA6B,qBAAlBT,EAAMU,QACrBV,EAAMQ,QAAQ,GAAGE,QAAUV,EAAMU,QAEnCP,EAAMG,EAAIA,EACVH,EAAMM,EAAIA,EACV,IAAME,EAAWR,EAAMS,gBAAgBrB,EAASa,QAAQS,eAAeC,WACvElC,EAAQhC,EAAI,IAAAE,OAAOiE,KAAKC,MAAML,EAASL,GAA3B,KAAAxD,OAAiCiE,KAAKC,MAAML,EAASF,OA0C/DtG,sBAtCwB,WACxB+E,IACFH,EAAS,SAAA5B,GAAK,SAAAL,OAAAyB,OAAAuB,EAAA,EAAAvB,CAAQpB,GAAR,CAAe,CAAChB,QAAOI,QAAOK,YAC5CgC,EAAQ,MAoCNvE,iBA5DmB,SAAC2F,GACxB5F,IACA4F,EAAMiB,kBA2DF3G,UAAWiF,EACXvF,OAAQA,EACRC,SAAUA,MDxFF,MAASyF,SAASwB,eAAe","file":"static/js/main.f44525d8.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './styles/DrawArea.css';\n\nexport const DrawArea = (props) => {\n  const {\n    cursor,\n    drawings,\n    handleDrawing,\n    handleLeavingDrawArea,\n    handleDrawStart,\n    handleTouchStart,\n    reference\n  } = props;\n\n  return(\n    <div className=\"DrawArea-Container\">\n      <svg\n        className=\"DrawArea\"\n        onMouseDown={handleDrawStart}\n        onMouseLeave={handleLeavingDrawArea}\n        onMouseMove={handleDrawing}\n        onTouchStart={handleTouchStart}\n        onTouchMove={handleDrawing}\n        ref={reference}\n        style={cursor}\n      >\n        {drawings}\n      </svg>\n    </div>\n  )\n};\n\n\nDrawArea.propTypes = {\n  cursor : PropTypes.object,\n  drawings : PropTypes.array,\n  handleDrawing : PropTypes.func,\n  handleLeavingDrawArea : PropTypes.func,\n  handleDrawStart : PropTypes.func,\n  handleTouchStart : PropTypes.func,\n  reference : PropTypes.object\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './styles/Button.css'\n\n\nexport const Button = (props) => {\n  const {\n    onClick,\n    name\n  } = props;\n\n  return (\n    <button\n      className=\"Button\"\n      onClick={onClick}\n    >\n      {name}\n    </button>\n  )\n};\n\n\nButton.propTypes = {\n  onClick : PropTypes.func,\n  name : PropTypes.string\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './styles/Select.css'\n\n\nexport const Select = (props) => {\n  const {\n    onChange,\n    label,\n    name,\n    options,\n    value\n  } = props;\n\n  const getOptions = options => options.map((o) =>\n    <option key = {o.value} value = {o.value}>\n      {o.label || o.value}\n    </option>\n  );\n  return (\n    <div className=\"Select-container\">\n\n      <label\n        className=\"Select-label\"\n        htmlFor={name}\n      >\n        {label}\n      </label>\n\n      <select\n        className=\"Select\"\n        id={name}\n        name={name}\n        value={value}\n        onChange={onChange}\n      >\n        {getOptions(options)}\n      </select>\n\n    </div>\n  )\n};\n\n\nSelect.propTypes = {\n  handleSelected : PropTypes.func,\n  label : PropTypes.string,\n  name : PropTypes.string,\n  options : PropTypes.array,\n  value : PropTypes.string\n};\n","export const colorOptions = [\n  {\n    label: 'black',\n    value: '#000000'\n  },\n  {\n    label: 'blue',\n    value: '#0d396d'\n  },\n  {\n    label: 'green',\n    value: '#06a449'\n  },\n  {\n    label: 'orange',\n    value: '#ec9e4d'\n  },\n  {\n    label: 'red',\n    value: '#f71326'\n  },\n];\n","export const widthOptions = [\n  {\n    label: '4',\n    value: 4\n  },\n  {\n    label: '6',\n    value: 6\n  },\n  {\n    label: '8',\n    value: 8\n  },\n  {\n    label: '10',\n    value: 10\n  },\n  {\n    label: '12',\n    value: 12\n  },\n];\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Button} from \"./Button\";\nimport {Select} from \"./Select\";\nimport {colorOptions} from \"./colorOptions\";\nimport {widthOptions} from \"./widthOptions\";\nimport './styles/DrawPanel.css'\n\nexport const DrawPanel = (props) => {\n  const {\n    color,\n    handleClearingDraws,\n    handleColorChange,\n    handleWidthChange,\n    width\n  } = props;\n\n\n  return(\n    <div className= \"DrawPanel\">\n      <Button\n        classname=\"Button\"\n        name=\"Erase\"\n        onClick={handleClearingDraws}\n      />\n      <div className=\"DrawPanel-tools\">\n        <Select\n          className=\"Select\"\n          label=\"Color\"\n          onChange={handleColorChange}\n          options={colorOptions}\n          value= {color}\n        />\n        <Select\n          className=\"Select\"\n          label=\"Width\"\n          onChange={handleWidthChange}\n          options={widthOptions}\n          value= {width}\n        />\n      </div>\n    </div>\n  )\n\n};\n\n\nDrawPanel.propTypes = {\n  color : PropTypes.string,\n  handleClearingDraws : PropTypes.func,\n  handleColorChange : PropTypes.func,\n  handleWidthChange : PropTypes.func,\n  width : PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nexport const Path = (props) => {\n  const {\n    color,\n    path,\n    width\n  } = props;\n\n  return(\n  <path\n    d={path && `M ${path}`}\n    strokeWidth={width}\n    stroke={color}\n    fill='none'\n  />\n  )\n};\n\n\nPath.propTypes = {\n  color : PropTypes.string,\n  path : PropTypes.string,\n  width : PropTypes.string\n};\n","import {Path} from \"./Path\";\nimport React from \"react\";\n\nexport const createDrawings = (draws) => {\n  const filterDraws = draws.filter((draw) => draw.path.length > 0);\n    return (\n      filterDraws.map((draw, index) =>\n        <Path\n          color={draw.color}\n          key={index*index}\n          path={draw.path}\n          width={draw.width}\n        />\n        )\n    )\n}\n\n","export const getCursor = (color, stroke, scalar = 4) =>\n  {\n    let svgTemplate = getSvgTemplate(color, stroke*scalar);\n    svgTemplate = encodeURIComponent(svgTemplate.replace(/\"/g, \"'\"));\n    return {cursor: `url(\"data:image/svg+xml,${svgTemplate}\") 0 ${stroke*scalar}, pointer `};\n  };\n\nconst getSvgTemplate = (color, size) =>\n  `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 460 460\" height=\"${size}\" width=\"${size}\">\n    <polygon fill=\"#E0D492\" points=\"27.665,330.029 0,459.998 129.967,432.33\"/>\n    <path fill=\"${color}\" d=\"M 27.665,330.029 129.967,432.33 459.99619,102.30622 357.69268,0.00270339 Z\"/>\n    <path fill=\"${color}\" d=\"M 0,459.998 74.380734,444.70183 14.770642,388.7844 Z\"/>\n  </svg>`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/base.css';\nimport{App} from \"./App\";\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React, {useEffect, useState, useRef} from 'react';\nimport {DrawArea} from \"./DrawArea\"\nimport {DrawPanel} from \"./DrawPanel\";\nimport {createDrawings} from \"./createDrawings\";\nimport {getCursor} from \"./cursor\";\n\n\nexport function App() {\n  const [color, setColor] = useState('#000000');\n  const [path, setPath] = useState('');\n  const [draws, setDraws] = useState([]);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [width, setWidth] = useState('8');\n  const drawArea = useRef();\n\n\n  useEffect(() => {\n    if (isDrawing) {\n      document.addEventListener(\"mouseup\", handleDrawEnd);\n      document.addEventListener(\"touchend\", handleDrawEnd);\n\n      return () => {\n        document.removeEventListener(\"mouseup\", handleDrawEnd);\n        document.removeEventListener(\"touchend\", handleDrawEnd);\n      };\n    }\n  });\n\n  const handleDrawStart = () =>\n    setIsDrawing(true);\n\n  const handleTouchStart = (event) => {\n    handleDrawStart();\n    event.preventDefault()\n  };\n\n  const handleDrawing = (event) => {\n    if (isDrawing) {\n      const point = drawArea.current.createSVGPoint();\n\n      const x = typeof event.clientX === 'undefined' ?\n        event.touches[0].clientX : event.clientX;\n      const y = typeof event.clientY === 'undefined' ?\n        event.touches[0].clientY : event.clientY;\n\n      point.x = x;\n      point.y = y;\n      const pointSVG = point.matrixTransform(drawArea.current.getScreenCTM().inverse());\n      setPath(path + ` ${Math.round(pointSVG.x)} ${Math.round(pointSVG.y)}`);\n    }\n  };\n\n  const handleLeavingDrawArea = () => {\n    if (isDrawing) {\n      setDraws(draws => [...draws, {color, width, path}]);\n      setPath('');\n    }\n  };\n\n  const handleDrawEnd = () => {\n    setIsDrawing(false);\n    setDraws(draws => [...draws, {color, width, path}]);\n    setPath('');\n  };\n\n  const handleClearingDraws = () =>\n    setDraws([]);\n\n  const handleColorChange = (event) =>\n    setColor(event.target.value);\n\n  const handleWidthChange = (event) =>\n    setWidth(event.target.value);\n\n  const cursor = getCursor(color, width);\n\n  const drawings = createDrawings([...draws, {color,width, path}]);\n\n  return(\n    <main>\n      <DrawPanel\n        color={color}\n        handleClearingDraws = {handleClearingDraws}\n        handleColorChange = {handleColorChange}\n        handleWidthChange = {handleWidthChange}\n        width={width}\n      />\n      <DrawArea\n        handleDrawStart={handleDrawStart}\n        handleDrawing={handleDrawing}\n        handleLeavingDrawArea={handleLeavingDrawArea}\n        handleTouchStart={handleTouchStart}\n        reference={drawArea}\n        cursor={cursor}\n        drawings={drawings}\n      />\n    </main>\n  )\n}\n"],"sourceRoot":""}